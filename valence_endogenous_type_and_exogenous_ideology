treatment "valence_endogenous_type_and_exogenous_idology.ztt"{
	background{
		table globals{
		}
		table subjects{
		}
		table summary{
		}
		table contracts{
		}
		table session{
		}
		table logfile{
		}
		numsubjects = 12;
		numgroups = 1;
		numpracticeperiods = 0;
		numactualperiods = 2;
		exchangerate = 0.02;
		startendowment = 0;
		showupfee = 5;
		noAutoscope = FALSE;
		v2IntegerVars = TRUE;
		v2BooleanVars = TRUE;
		firstBoxesOnTop = FALSE;
		showupfeeawaytext = "Sie haben Verlust gemacht. Wollen Sie das Startgeld einsetzen, um diesen Verlust zu decken?";
		showupfeeawayyestext = "Ja";
		showupfeeawaynotext = "Nein";
		moneyawaytext = "Sie haben Verlust gemacht. Wollen Sie weiterfahren?";
		moneyawayyestext = "Ja";
		moneyawaynotext = "Nein";
		bancruptwaittext = "Bitte warten Sie bis Ihr Computer wieder freigegeben wird.";
		program{
			table = subjects;
			do{
				Effort=0;
				
				s1=0;
				s2=0;
				s3=0;
				s4=0;
				s5=0;
				s6=0;
				s7=0;
				s8=0;
				s9=0;
				s10=0;
				s11=0;
				s12=0;
				s13=0;
				s14=0;
				s15=0;
				s16=0;
				s17=0;
				s18=0;
				s19=0;
				s20=0;
				s21=0;
				s22=0;
				s23=0;
				s24=0;
				s25=0;
				s26=0;
				s27=0;
				s28=0;
				s29=0;
				s30=0;
				s31=0;
				s32=0;
				s33=0;
				s34=0;
				s35=0;
				s36=0;
				s37=0;
				s38=0;
				s39=0;
				s40=0;
				s41=0;
				s42=0;
				s43=0;
				s44=0;
				s45=0;
				s46=0;
				s47=0;
				s48=0;
				
				q1=0;
				q2=0;
				q3=0;
				q4=0;
				q5=0;
				q6=0;
				q7=0;
				q8=0;
				q9=0;
				q10=0;
				q11=0;
				q12=0;
				q13=0;
				q14=0;
				q15=0;
				q16=0;
				q17=0;
				q18=0;
				q19=0;
				q20=0;
				q21=0;
				q22=0;
				q23=0;
				q24=0;
				q25=0;
				q26=0;
				q27=0;
				q28=0;
				q29=0;
				q30=0;
				q31=0;
				q32=0;
				q33=0;
				q34=0;
				q35=0;
				q36=0;
				q37=0;
				q38=0;
				q39=0;
				q40=0;
				q41=0;
				q42=0;
				q43=0;
				q44=0;
				q45=0;
				q46=0;
				q47=0;
				q48=0;
			}
		}
		program{
			table = subjects;
			do{
				numberOfSubjects = 12;
				GroupSize = 2;
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			headerbox "Header"{
				hasframe = TRUE;
				height = 10%;
				top = 0p;
				cuttop = TRUE;
				showPeriods = TRUE;
				showNumPeriods = TRUE;
				periodtext = "Period";
				periodoftext = "of";
				practiceperiodprefix = "Probe ";
				showtime = TRUE;
				timestr = "Time remaining [sec]:";
				pleasedecidetext = "Please make a decision!";
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Text"{
				hasframe = TRUE;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Please wait, the experiment will proceed shortly.";
				}
			}
		}
	}
	stage "Get Ideology & Initialize Parameters"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				Participate = if ( Period == 1 , 1 , 0 );
			}
		}
		program{
			table = subjects;
			do{
				endowment = 101;
				benefitFromOffice = 101;
				//ideology = 0;
				averageIdeology = 0;
				citizenIdeology = 0;
				leaderIdeology = 0;
				averageType = 0;
				policy = 0;
				firstPeriodCitizenPayoff = 0;
				secondPeriodCitizenPayoff = 0;
				firstPeriodLeaderPayoff = 0;
				secondPeriodLeaderPayoff = 0;
				leaderType = 0;
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Store Ideology"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				if ( Period == 1 ){
				  ideology = random()*10;
				}
				
			}
		}
		program{
			table = subjects;
			do{
				ideology1 = find ( Subject == 1 , ideology );
				ideology2 = find ( Subject == 2 , ideology );
				ideology3 = find ( Subject == 3 , ideology );
				ideology4 = find ( Subject == 4 , ideology );
				ideology5 = find ( Subject == 5 , ideology );
				ideology6 = find ( Subject == 6 , ideology );
				ideology7 = find ( Subject == 7 , ideology );
				ideology8 = find ( Subject == 8 , ideology );
				ideology9 = find ( Subject == 9 , ideology );
				ideology10 = find ( Subject == 10 , ideology );
				ideology11 = find (Subject == 11 , ideology );
				ideology12 = find ( Subject == 12 , ideology );
				
				
			}
		}
		program{
			table = subjects;
			do{
				if ( Period > 1 ) {
				
				  ideology = OLDsubjects.find ( same ( Subject ) , ideology );
				
				  ideology1 = OLDsubjects.find ( same ( Subject ) , ideology1 );
				  ideology2 = OLDsubjects.find ( same (Subject ) , ideology2 );
				  ideology3 = OLDsubjects.find ( same ( Subject ) , ideology3 );
				  ideology4 = OLDsubjects.find ( same ( Subject ) , ideology4 );
				  ideology5 = OLDsubjects.find ( same ( Subject ) , ideology5 );
				  ideology6 = OLDsubjects.find ( same ( Subject ) , ideology6 );
				  ideology7 = OLDsubjects.find ( same ( Subject ) , ideology7 );
				  ideology8 = OLDsubjects.find ( same ( Subject ) , ideology8 );
				  ideology9 = OLDsubjects.find ( same ( Subject ) , ideology9 );
				  ideology10 = OLDsubjects.find ( same ( Subject ) , ideology10 );
				  ideology11 = OLDsubjects.find ( same ( Subject ) , ideology11 );
				  ideology12 = OLDsubjects.find ( same ( Subject ) , ideology12 );
				
				}
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Prepare for task"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 40;
		program{
			table = subjects;
			do{
				Participate = if ( Period == 1 , 1 , 0 );
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = TRUE;
			noalertscreen = FALSE;
			standardbox "Prepare"{
				hasframe = FALSE;
				width = 80%;
				left = 10%;
				buttonposition = BOTTOMMIDDLE;
				buttonsequence = HORIZONTAL;
				item{
					label = "In the task that follows, you have to drag the sliders to the middle of the spectrum (50). You can try as many times as needed in each slider. There will be 48 sliders and you will have 120 seconds to do the task. The more sliders you place at 50 the more points you make. Each slider placed correctly yields 1 point in the task. Your final performance in this task will be referred as points score later in the game, and this score will affect how your final income and the final income of the other players. Your task will start shortly.";
				}
				item{
				}
				button "OK"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = TRUE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Slider Task"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 120;
		program{
			table = subjects;
			do{
				Participate = if ( Period == 1 , 1 , 0 );
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = TRUE;
			noalertscreen = FALSE;
			containerbox "Task"{
				hasframe = TRUE;
				width = 100%;
				left = 0;
				cutleft = TRUE;
				gridbox "Grid1"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 5%;
					top = 10%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = TRUE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q1;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s1=if(q1==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						variable = q1;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q2;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s2=if(q2==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						variable = q2;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q3;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s3=if(q3==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						variable = q3;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid2"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 3%;
					top = 15%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q4;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s4=if(q4==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						variable = q4;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q5;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s5=if(q5==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						variable = q5;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q6;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s6=if(q6==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q6;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q10;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s10=if(q10==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q10;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid3"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 8%;
					top = 20%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q7;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s7=if(q7==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q7;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q8;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s8=if(q8==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q8;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q9;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s9=if(q9==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q9;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid4"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 1%;
					top = 25%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q10;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s10=if(q10==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q10;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q11;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s11=if(q11==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q11;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q12;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s12=if(q12==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q12;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid5"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 4%;
					top = 30%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q13;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s13=if(q13==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q13;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q14;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s14=if(q14==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q14;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q15;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s15=if(q15==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q15;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid6"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 2%;
					top = 35%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q16;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s16=if(q16==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q16;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q17;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s17=if(q17==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q17;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q18;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s18=if(q18==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q18;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q19;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s19=if(q19==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q19;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q20;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s20=if(q20==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
				}
				gridbox "Grid7"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 9%;
					top = 40%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q19;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s19=if(q19==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q19;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q20;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s20=if(q20==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q20;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q21;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s21=if(q21==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q21;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid8"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 2%;
					top = 45%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q22;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s22=if(q22==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q22;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q23;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s23=if(q23==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q23;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q24;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s24=if(q24==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q24;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid9"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 4%;
					top = 50%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q25;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s25=if(q25==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q25;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q26;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s26=if(q26==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q26;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q27;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s27=if(q27==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q27;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid10"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 2%;
					top = 55%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q28;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s28=if(q28==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q28;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q29;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s29=if(q29==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q29;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q30;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s30=if(q30==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q30;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid11"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 7%;
					top = 60%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q31;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s31=if(q31==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q31;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q32;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s32=if(q32==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q32;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q33;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s33=if(q33==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q33;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid12"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 4%;
					top = 65%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q34;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s34=if(q34==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q34;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q35;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s35=if(q35==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q35;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q36;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s36=if(q36==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q36;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid13"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 10%;
					top = 70%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q37;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s37=if(q37==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q37;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q38;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s38=if(q38==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q38;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q39;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s39=if(q39==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q39;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid14"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 3%;
					top = 75%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q40;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s40=if(q40==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q40;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q41;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s41=if(q41==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q41;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q42;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s42=if(q42==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q42;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid15"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 6%;
					top = 80%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q43;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s43=if(q43==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q43;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q44;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s44=if(q44==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q44;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q45;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s45=if(q45==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q45;
						format = "1";
						input = FALSE;
					}
				}
				gridbox "Grid16"{
					hasframe = FALSE;
					width = 90%;
					height = 5%;
					left = 10%;
					top = 85%;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					numrows = 1;
					numcolumns = 8;
					firstcolumnwidth = 100;
					firstrowheight = 100;
					fieldsinrows = FALSE;
					infieldlabeisallowed = FALSE;
					firstrowislabel = FALSE;
					firstcolumnislabel = FALSE;
					labelseparators = FALSE;
					rowseparators = FALSE;
					columnseparators = FALSE;
					item{
						variable = q46;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s46=if(q46==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q46;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q47;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s47=if(q47==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q47;
						format = "1";
						input = FALSE;
					}
					item{
					}
					item{
						variable = q48;
						format = "!slider: 0 = \"\"; 100 = \"\"; 101";
						input = TRUE;
						showdefault = TRUE;
						emptyallowed = TRUE;
						min = 0;
						max = 100;
						defaultvalue = 0;
						program{
							table = subjects;
							do{
								s48=if(q48==50,1,0);
								Effort=s1+s2+s3+s4+s5+s6+s7+s8+s9+s10+s11+s12+s13+s14+s15+s16+s17+s18+s19+s20+s21+s22+s23+s24+s25+s26+s27+s28+s29+s30+s31+s32+s33+s34+s35+s36+s37+s38+s39+s40+s41+s42+s43+s44+s45+s46+s47+s48;
							}
						}
					}
					item{
						label = "<> Current position";
						variable = q48;
						format = "1";
						input = FALSE;
					}
				}
				standardbox "Standard"{
					hasframe = TRUE;
					height = 8%;
					top = 0;
					buttonposition = BOTTOMRIGHT;
					buttonsequence = HORIZONTAL;
					item{
						label = "Currently, your points score is: ";
						variable = Effort;
						format = "1";
						input = FALSE;
					}
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Store Effort"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				effort1 = find ( Subject == 1 , Effort );
				effort2 = find ( Subject == 2 , Effort );
				effort3 = find ( Subject == 3 , Effort );
				effort4 = find ( Subject == 4 , Effort );
				effort5 = find ( Subject == 5 , Effort );  
				effort6 = find ( Subject == 6 , Effort );
				effort7 = find ( Subject == 7 , Effort );
				effort8 = find ( Subject == 8 , Effort );
				effort9 = find ( Subject == 9 , Effort );
				effort10 = find ( Subject == 10 , Effort );
				effort11 = find ( Subject == 11 , Effort );
				effort12 = find ( Subject == 12 , Effort );
			}
		}
		program{
			table = subjects;
			do{
				if ( Period > 1 ) {
				  Effort = OLDsubjects.find ( same ( Subject ) , Effort );
				
				  effort1 = OLDsubjects.find ( same ( Subject ) , effort1 );
				  effort2 = OLDsubjects.find ( same ( Subject ) , effort2 );
				  effort3 = OLDsubjects.find ( same ( Subject ) , effort3 );
				  effort4 = OLDsubjects.find ( same ( Subject ) , effort4 );
				  effort5 = OLDsubjects.find ( same ( Subject ) , effort5 );
				  effort6 = OLDsubjects.find ( same ( Subject ) , effort6 );
				  effort7 = OLDsubjects.find ( same ( Subject ) , effort7 );
				  effort8 = OLDsubjects.find ( same ( Subject ) , effort8 );
				  effort9 = OLDsubjects.find ( same ( Subject ) , effort9 );
				  effort10 = OLDsubjects.find ( same ( Subject ) , effort10 );
				  effort11 = OLDsubjects.find ( same ( Subject ) , effort11 );
				  effort12 = OLDsubjects.find ( same ( Subject ) , effort12 );
				
				}
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Report points score in the task"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 20;
		program{
			table = subjects;
			do{
				Participate = if ( Period == 1 , 1 , 0 );
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = TRUE;
			noalertscreen = FALSE;
			standardbox "Report"{
				hasframe = FALSE;
				width = 60%;
				height = 50%;
				left = 20%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Your points score was:";
					variable = Effort;
					format = "1";
					input = FALSE;
				}
				item{
				}
				item{
					label = "Your policy number in this game is:";
					variable = ideology;
					format = "0.01";
					input = FALSE;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Assign Groups and Roles"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				randGroup = random();
			}
		}
		program{
			table = subjects;
			do{
				ranking = count ( randGroup >= : randGroup );
				ranking = ranking - 1;
				GroupNum = rounddown ( ranking / GroupSize , 1 );
				
			}
		}
		program{
			table = subjects;
			do{
				randPlayer = random();
			}
		}
		program{
			table = subjects;
			do{
				//PlayerNum 1 is the leader; PlayerNum 2 is the citizen
				ranking = count ( same ( GroupNum ) & randPlayer >= : randPlayer );
				PlayerNum = ranking;
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Leader's Policy Decision"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = never;
		timeout = 30;
		program{
			table = subjects;
			do{
				Participate = if ( PlayerNum == 1 , 1 , 0 );
			}
		}
		program{
			table = subjects;
			do{
				averageIdeology = average ( ideology );
				averageType = average ( Effort );
				
				citizenIdeology = find ( same ( GroupNum ) & same ( Period ) & PlayerNum == 2 , ideology );
				leaderIdeology = find ( same ( GroupNum ) & same ( Period ) & PlayerNum == 1 , ideology );
			}
		}
		program{
			table = subjects;
			do{
				averagePayoff = endowment + averageType - power ( ( ideology - averageIdeology ) , 2 );
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Information"{
				hasframe = TRUE;
				width = 60%;
				height = 40%;
				left = 0;
				top = 0;
				buttonposition = BOTTOMMIDDLE;
				buttonsequence = HORIZONTAL;
				item{
					label = "Citizen's policy number:";
					variable = citizenIdeology;
					format = "0.01";
					input = FALSE;
				}
				item{
				}
				item{
					label = "Your points score is";
					variable = Effort;
					format = "1";
					input = FALSE;
				}
				item{
				}
				item{
					label = "Your payoff in this round will be:  your points score - ( your policy number - your policy allocation )^2 + benefit from being in office.";
				}
				item{
				}
				item{
					label = "If the citizen keeps you in office, your payoff next round will be:  your points score + benefit from being in office.";
				}
				item{
				}
				item{
					label = "If the citizen replaces you, your payoff next round will be: average points score - ( your policy number - average policy number )^2.";
				}
			}
			standardbox "Slider"{
				hasframe = TRUE;
				width = 60%;
				height = 40%;
				left = 0;
				top = 50%;
				buttonposition = BOTTOMMIDDLE;
				buttonsequence = HORIZONTAL;
				item{
					label = "Please drag the slider to indicate the policy allocation you want in this round.";
				}
				item{
				}
				item{
					variable = policy;
					format = "!slider: 0 = \"0\"; 1000 = \"10\"; 1001";
					input = TRUE;
					showdefault = FALSE;
					emptyallowed = FALSE;
					min = 0;
					max = 1000;
				}
				item{
				}
				button "OK"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = TRUE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 30%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Policy number distribution:";
				}
				item{
					variable = ideology1;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology2;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology3;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology4;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 20%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = ideology5;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology6;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology7;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology8;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 10%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = ideology9;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology10;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology11;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology12;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 30%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Points score distribution:";
				}
				item{
					variable = effort1;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort2;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort3;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort4;
					format = "1";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 20%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = effort5;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort6;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort7;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort8;
					format = "1";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 10%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = effort9;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort10;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort11;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort12;
					format = "1";
					input = FALSE;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Compute and Store Payoffs Before Reelection"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				leaderType = find ( same ( GroupNum ) & PlayerNum == 1 , Effort );
				policy = find ( same ( GroupNum ) & PlayerNum == 1 , policy ) / 100;
			}
		}
		program{
			table = subjects;
			do{
				//Compute citizen's share
				firstPeriodCitizenPayoff = find ( same ( GroupNum ) & PlayerNum == 1 , policy );
				firstPeriodCitizenPayoff = endowment + leaderType - power ( ( ideology - firstPeriodCitizenPayoff) , 2 ) ;
				secondPeriodCitizenPayoff = endowment + leaderType - power ( ( ideology - leaderIdeology ) , 2 );
				firstPeriodLeaderPayoff = leaderType - power ( ( ideology - policy) , 2 )  + benefitFromOffice;
				secondPeriodLeaderPayoff = leaderType + benefitFromOffice;
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "citizenDecision"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = never;
		timeout = 30;
		program{
			table = subjects;
			do{
				Participate = if ( PlayerNum == 2,1,0);
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Report Policy Decision"{
				hasframe = TRUE;
				width = 60%;
				height = 40%;
				left = 0;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "The endowment is:";
					variable = endowment;
					format = "1";
					input = FALSE;
				}
				item{
				}
				item{
					label = "The leader's points score in this round is:";
					variable = leaderType;
					format = "1";
					input = FALSE;
				}
				item{
				}
				item{
					label = "The leader's policy allocation was:";
					variable = policy;
					format = "0.01";
					input = FALSE;
				}
				item{
				}
				item{
					label = "Your payoff in this round is: endowment + leader's points score - ( your policy number - leaders' policy allocation )^2.";
				}
			}
			standardbox "Report Policy Decision"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 30%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Points score distribution:";
				}
				item{
					variable = effort1;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort2;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort3;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort4;
					format = "1";
					input = FALSE;
				}
			}
			standardbox "Report Policy Decision"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 20%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = effort5;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort6;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort7;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort8;
					format = "1";
					input = FALSE;
				}
			}
			standardbox "Report Policy Decision"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 10%;
				top = 50%;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = effort9;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort10;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort11;
					format = "1";
					input = FALSE;
				}
				item{
					variable = effort12;
					format = "1";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 30%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Policy number distribution:";
				}
				item{
					variable = ideology1;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology2;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology3;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology4;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 20%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = ideology5;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology6;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology7;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology8;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = FALSE;
				width = 10%;
				height = 40%;
				right = 10%;
				top = 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					variable = ideology9;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology10;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology11;
					format = "0.01";
					input = FALSE;
				}
				item{
					variable = ideology12;
					format = "0.01";
					input = FALSE;
				}
			}
			standardbox "Standard"{
				hasframe = TRUE;
				width = 60%;
				height = 40%;
				left = 0;
				top = 50%;
				buttonposition = BOTTOMMIDDLE;
				buttonsequence = HORIZONTAL;
				item{
					label = "If you change the leader your payoff in the next round will be: endowment + average points score - ( your  policy number - average policy number )^2 .";
				}
				item{
				}
				item{
					label = "If you keep the leader your payoff in the next round will be: endowment + leader's points score - ( your policy number - leader's policy number )^2.";
				}
				item{
				}
				item{
					label = "Do you want to change the leader?";
					variable = citizenDecision;
					format = "!radio: 1 = \"Yes\"; 0 = \"No\";";
					input = TRUE;
					showdefault = FALSE;
					emptyallowed = FALSE;
					min = 0;
					max = 1;
				}
				item{
				}
				button "OK"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = TRUE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Profit Calculation"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 0;
		program{
			table = subjects;
			do{
				citizenDecision = find ( same ( GroupNum ) & PlayerNum == 2 , citizenDecision );
			}
		}
		program{
			table = subjects;
			do{
				if ( PlayerNum == 1 ){
				  Profit = if ( citizenDecision == 1 ,  firstPeriodLeaderPayoff + averagePayoff , firstPeriodLeaderPayoff + secondPeriodLeaderPayoff );
				}
				else{
				 Profit = if (citizenDecision == 1 ,  firstPeriodCitizenPayoff + averagePayoff, firstPeriodCitizenPayoff + secondPeriodCitizenPayoff );
				}
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Profit leader"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 10;
		program{
			table = subjects;
			do{
				Participate = if ( PlayerNum == 1,1,0);
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Standard"{
				hasframe = TRUE;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Your income in this round";
					variable = Profit;
					format = "1";
					input = FALSE;
				}
				button "continue"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = FALSE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	stage "Profit citizen"{
		startwaitforall = FALSE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = always;
		timeout = 10;
		program{
			table = subjects;
			do{
				Participate = if ( PlayerNum == 2,1,0);
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Standard"{
				hasframe = TRUE;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
				}
				item{
					label = "Your income in this round";
					variable = Profit;
					format = "1";
					input = FALSE;
				}
				button "continue"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = FALSE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	roles{
		role "S 1"{
		}
		role "S 2"{
		}
		role "S 3"{
		}
		role "S 4"{
		}
		role "S 5"{
		}
		role "S 6"{
		}
		role "S 7"{
		}
		role "S 8"{
		}
		role "S 9"{
		}
		role "S 10"{
		}
		role "S 11"{
		}
		role "S 12"{
		}
	}
	period "1"{
		subject 1{
			group = 1;
		}
		subject 2{
			group = 1;
		}
		subject 3{
			group = 1;
		}
		subject 4{
			group = 1;
		}
		subject 5{
			group = 1;
		}
		subject 6{
			group = 1;
		}
		subject 7{
			group = 1;
		}
		subject 8{
			group = 1;
		}
		subject 9{
			group = 1;
		}
		subject 10{
			group = 1;
		}
		subject 11{
			group = 1;
		}
		subject 12{
			group = 1;
		}
	}
	period "2"{
		subject 1{
			group = 1;
		}
		subject 2{
			group = 1;
		}
		subject 3{
			group = 1;
		}
		subject 4{
			group = 1;
		}
		subject 5{
			group = 1;
		}
		subject 6{
			group = 1;
		}
		subject 7{
			group = 1;
		}
		subject 8{
			group = 1;
		}
		subject 9{
			group = 1;
		}
		subject 10{
			group = 1;
		}
		subject 11{
			group = 1;
		}
		subject 12{
			group = 1;
		}
	}
}
